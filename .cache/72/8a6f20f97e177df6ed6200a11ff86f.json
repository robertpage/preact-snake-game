{"id":"Zmss","dependencies":[{"name":"/Users/roberteasley/preact-app/package.json","includedInParent":true,"mtime":1606248627666},{"name":"immer","loc":{"line":1,"column":24},"parent":"/Users/roberteasley/preact-app/app/state-managment/sm.js","resolved":"/Users/roberteasley/preact-app/node_modules/immer/dist/immer.esm.js"},{"name":"../../index","loc":{"line":2,"column":27},"parent":"/Users/roberteasley/preact-app/app/state-managment/sm.js","resolved":"/Users/roberteasley/preact-app/index.js"},{"name":"../actions/keys","loc":{"line":3,"column":26},"parent":"/Users/roberteasley/preact-app/app/state-managment/sm.js","resolved":"/Users/roberteasley/preact-app/app/actions/keys.js"}],"generated":{"js":"var $Zmss$exports={};let $Zmss$var$lastState;function $Zmss$export$initState(t){$Zmss$var$lastState=t,$Zmss$import$renderView($Zmss$var$lastState),$Zmss$var$requestTimeout(()=>{$Zmss$var$move()},1e3),document.addEventListener(\"keydown\",t=>{$Zmss$import$changeDir(t)},!1)}async function $Zmss$var$move(){let t=!1;const s={D:{x:0,y:1},L:{x:-1,y:0},R:{x:1,y:0},U:{x:0,y:-1}},e=$Zmss$var$lastState.headPos.x+s[$Zmss$var$lastState.dirArr[$Zmss$var$lastState.dirArr.length-1]].x,$=$Zmss$var$lastState.headPos.y+s[$Zmss$var$lastState.dirArr[$Zmss$var$lastState.dirArr.length-1]].y;$Zmss$var$lastState.gameArea[$]&&$Zmss$var$lastState.gameArea[$][e]&&2!==$Zmss$var$lastState.gameArea[$][e]?(3===$Zmss$var$lastState.gameArea[$][e]&&(t=!0),await $Zmss$export$updateStatePromise(a=>{if(a.gameArea[$][e]=2,a.dirArr.push(a.dirArr[a.dirArr.length-1]),a.headPos.x=e,a.headPos.y=$,t){const t=$Zmss$var$getNewFoodSpace($Zmss$var$lastState);a.gameArea[t.y][t.x]=3}else{const t=a.dirArr.shift(),e=a.tailPos.x+s[t].x,$=a.tailPos.y+s[t].y;a.gameArea[a.tailPos.y][a.tailPos.x]=1,a.tailPos.x=e,a.tailPos.y=$}}),$Zmss$var$requestTimeout(()=>{$Zmss$var$move()},200)):window.alert(\"you lost\")}function $Zmss$var$getNewFoodSpace(t){let s=!0;for(;s;){const e=Math.floor(25*Math.random()),$=Math.floor(25*Math.random());if(1===t.gameArea[$][e])return s=!1,{x:e,y:$}}}$parcel$require(\"Zmss\",\"immer\"),$parcel$require(\"Zmss\",\"../../index\"),$parcel$require(\"Zmss\",\"../actions/keys\"),$Zmss$exports.initState=$Zmss$export$initState;const $Zmss$export$updateState=function(t){const s=$Zmss$import$produce($Zmss$var$lastState,t);return $Zmss$import$renderView(s),$Zmss$var$lastState=s,!0};$Zmss$exports.updateState=$Zmss$export$updateState;const $Zmss$export$updateStatePromise=function(t){return new Promise((s,e)=>{try{const a=$Zmss$import$produce($Zmss$var$lastState,t);$Zmss$import$renderView(a),$Zmss$var$lastState=a,s()}catch($){e($)}})};function $Zmss$export$getCurrentState(){return $Zmss$var$lastState}$Zmss$exports.updateStatePromise=$Zmss$export$updateStatePromise,$Zmss$exports.getCurrentState=$Zmss$export$getCurrentState;const $Zmss$var$requestTimeout=(t,s)=>{const e=(new Date).getTime(),$=()=>{(new Date).getTime()-e>=s?t():requestAnimationFrame($)};requestAnimationFrame($)};"},"sourceMaps":null,"error":null,"hash":"ed0440a05055a8dce71b5c8ff5e92877","cacheData":{"env":{},"imports":{"$Zmss$import$produce":["immer","produce"],"$Zmss$import$renderView":["../../index","renderView"],"$Zmss$import$changeDir":["../actions/keys","changeDir"]},"exports":{"initState":"$Zmss$export$initState","updateState":"$Zmss$export$updateState","updateStatePromise":"$Zmss$export$updateStatePromise","getCurrentState":"$Zmss$export$getCurrentState"},"wildcards":[],"sideEffects":true,"isES6Module":true}}